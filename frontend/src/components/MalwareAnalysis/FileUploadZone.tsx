import React, { useCallback } from 'react';
import { useDropzone } from 'react-dropzone';
import { Box, Typography, CircularProgress } from '@mui/material';
import { styled } from '@mui/material/styles';
import CloudUploadIcon from '@mui/icons-material/CloudUpload';

const DropZone = styled(Box)(({ theme }) => ({
  border: `2px dashed ${theme.palette.primary.main}`,
  borderRadius: theme.shape.borderRadius,
  padding: theme.spacing(4),
  textAlign: 'center',
  cursor: 'pointer',
  backgroundColor: theme.palette.background.default,
  transition: 'border-color 0.3s ease-in-out',
  '&:hover': {
    borderColor: theme.palette.primary.dark,
  },
}));

interface FileUploadZoneProps {
  onFileUpload: (file: File) => void;
  isAnalyzing: boolean;
}

const FileUploadZone: React.FC<FileUploadZoneProps> = ({ onFileUpload, isAnalyzing }) => {
  const onDrop = useCallback(
    (acceptedFiles: File[]) => {
      if (acceptedFiles.length > 0) {
        onFileUpload(acceptedFiles[0]);
      }
    },
    [onFileUpload]
  );

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    multiple: false,
  });

  return (
    <DropZone {...getRootProps()}>
      <input {...getInputProps()} />
      <Box sx={{ mb: 2 }}>
        <CloudUploadIcon sx={{ fontSize: 48, color: 'primary.main' }} />
      </Box>
      {isAnalyzing ? (
        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
          <CircularProgress size={24} sx={{ mb: 1 }} />
          <Typography>Analyse en cours...</Typography>
        </Box>
      ) : (
        <Typography>
          {isDragActive
            ? "Déposez le fichier ici..."
            : "Glissez-déposez un fichier ici, ou cliquez pour sélectionner"}
        </Typography>
      )}
    </DropZone>
  );
};

export default FileUploadZone; 