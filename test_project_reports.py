#!/usr/bin/env python3
"""
Script de test pour v√©rifier que les rapports apparaissent dans la page projet
"""

import os
import sys
import requests
import urllib3
from datetime import datetime

# D√©sactiver les avertissements SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def test_project_reports():
    """Test que les rapports apparaissent dans la page projet"""
    
    base_url = "https://127.0.0.1:9797"
    session = requests.Session()
    session.verify = False
    
    print("üîç Test de l'affichage des rapports dans la page projet")
    print("=" * 60)
    
    # 1. Connexion
    print("\n1. Connexion...")
    login_data = {
        'username': 'admin',
        'password': 'admin'
    }
    
    try:
        response = session.post(f"{base_url}/login", data=login_data, allow_redirects=False)
        if response.status_code == 302:
            print("‚úÖ Connexion r√©ussie")
        else:
            print(f"‚ùå √âchec de la connexion: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Erreur de connexion: {e}")
        return False
    
    # 2. V√©rifier qu'il y a des projets
    print("\n2. V√©rification des projets...")
    try:
        response = session.get(f"{base_url}/projects")
        if response.status_code == 200:
            print("‚úÖ Page projets accessible")
            if "Projet" in response.text:
                print("‚úÖ Projets trouv√©s")
            else:
                print("‚ö†Ô∏è  Aucun projet trouv√©")
        else:
            print(f"‚ùå Erreur acc√®s projets: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Erreur acc√®s projets: {e}")
        return False
    
    # 3. V√©rifier qu'il y a des rapports
    print("\n3. V√©rification des rapports...")
    try:
        response = session.get(f"{base_url}/rapport")
        if response.status_code == 200:
            print("‚úÖ Page rapports accessible")
            if "nmap" in response.text or "hydra" in response.text or "dirsearch" in response.text:
                print("‚úÖ Rapports trouv√©s")
            else:
                print("‚ö†Ô∏è  Aucun rapport trouv√©")
        else:
            print(f"‚ùå Erreur acc√®s rapports: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Erreur acc√®s rapports: {e}")
        return False
    
    # 4. Tester la page d√©tail d'un projet
    print("\n4. Test de la page d√©tail projet...")
    try:
        # Essayer le projet 1
        response = session.get(f"{base_url}/projects/1")
        if response.status_code == 200:
            print("‚úÖ Page d√©tail projet accessible")
            
            # V√©rifier si la section rapports est pr√©sente
            if "Rapports associ√©s" in response.text:
                print("‚úÖ Section 'Rapports associ√©s' trouv√©e")
                
                # V√©rifier s'il y a des rapports list√©s
                if "Aucun rapport associ√©" in response.text:
                    print("‚ÑπÔ∏è  Aucun rapport associ√© √† ce projet")
                else:
                    print("‚úÖ Rapports associ√©s trouv√©s dans la page")
                    
                    # V√©rifier les liens de t√©l√©chargement
                    if "download_report_api" in response.text:
                        print("‚úÖ Liens de t√©l√©chargement corrects")
                    else:
                        print("‚ö†Ô∏è  Liens de t√©l√©chargement manquants")
            else:
                print("‚ùå Section 'Rapports associ√©s' manquante")
                return False
        else:
            print(f"‚ùå Erreur acc√®s d√©tail projet: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Erreur acc√®s d√©tail projet: {e}")
        return False
    
    # 5. Tester l'assignation d'un rapport
    print("\n5. Test d'assignation de rapport...")
    try:
        # V√©rifier s'il y a des rapports disponibles
        response = session.get(f"{base_url}/rapport")
        if "nmap_" in response.text:
            # Extraire un nom de rapport nmap
            import re
            nmap_reports = re.findall(r'nmap_\d+_\d+\.txt', response.text)
            if nmap_reports:
                report_filename = nmap_reports[0]
                print(f"üìã Test avec le rapport: {report_filename}")
                
                # Tester la page d'assignation
                response = session.get(f"{base_url}/rapport/assign/{report_filename}")
                if response.status_code == 200:
                    print("‚úÖ Page d'assignation accessible")
                    
                    # Assigner au projet 1
                    assign_data = {
                        'project_id': '1'
                    }
                    response = session.post(f"{base_url}/rapport/assign/{report_filename}", data=assign_data, allow_redirects=False)
                    if response.status_code == 302:
                        print("‚úÖ Rapport assign√© avec succ√®s")
                        
                        # V√©rifier que le rapport appara√Æt maintenant dans le projet
                        response = session.get(f"{base_url}/projects/1")
                        if report_filename in response.text:
                            print("‚úÖ Rapport visible dans la page projet")
                        else:
                            print("‚ùå Rapport non visible dans la page projet")
                            return False
                    else:
                        print(f"‚ùå √âchec de l'assignation: {response.status_code}")
                        return False
                else:
                    print(f"‚ùå Erreur page assignation: {response.status_code}")
                    return False
            else:
                print("‚ö†Ô∏è  Aucun rapport nmap trouv√© pour le test")
        else:
            print("‚ö†Ô∏è  Aucun rapport disponible pour le test")
    except Exception as e:
        print(f"‚ùå Erreur test assignation: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ Test termin√© avec succ√®s !")
    print("\nüìã Instructions pour tester manuellement:")
    print("1. Allez sur https://127.0.0.1:9797")
    print("2. Connectez-vous avec admin/admin")
    print("3. Allez dans 'Rapports' et assignez un rapport √† un projet")
    print("4. Allez dans 'Projets' et cliquez sur un projet")
    print("5. V√©rifiez que les rapports associ√©s apparaissent dans la section 'Rapports associ√©s'")
    print("6. Testez les liens de t√©l√©chargement TXT et PDF")
    
    return True

if __name__ == "__main__":
    success = test_project_reports()
    sys.exit(0 if success else 1) 